module boolean
    import Text;
    const
        tru* = true;
        fls = false;
    var bb : boolean;

    func main ()
        |
        const
        tru = true;
        fls = false;
            var i, j: integer;
                b : boolean;
        |

        i := 66;
        j := 55;


        (*
        b := (i > j) & (i < j) & ((i > j) & (i < j));
        Text.WriteBool(b);
        Text.WriteLn;


        *)
        b := ~(~(~(tru or tru & fls) or tru & fls) or ~fls);
        Text.WriteBool(b);
        Text.WriteLn;
        (*
        b := false;
        Text.WriteBool(b);
        Text.WriteLn;
        b := (i > j) & (i < j) & ((i > j) & (i < j));
        Text.WriteBool(b);
        Text.WriteLn;
            b := fls & (tru or (tru & fls));
        Text.WriteBool(b);
        Text.WriteLn;
        b := ((tru & fls) or tru) & fls; 
        Text.WriteBool(b);
        Text.WriteLn;

        b := (i > j) & (i < j) or ((i # j) & ((i > j) & (i <= j)));
        Text.WriteBool(b);
        Text.WriteLn;


        bb := true;
        Text.WriteBool(bb);
        Text.WriteLn;
        b := fls or (tru & fls or (tru & fls or tru));
        Text.WriteBool(b);
        Text.WriteLn;
        b := ((tru or tru & fls) or tru & fls) or fls;
        Text.WriteBool(b);
        Text.WriteLn;
        b := tru & true & tru & tru or tru & false;
        Text.WriteBool(b);
        Text.WriteLn;
        b := tru & false or tru & true & tru & tru;
        Text.WriteBool(b);
        Text.WriteLn;
        b := (tru or false) & true;
        Text.WriteBool(b);
        Text.WriteLn;
        b := true & (tru or false);
        Text.WriteBool(b);
        Text.WriteLn;

        
        b := (i >= j) & (i # j);
        Text.WriteBool(b);
        Text.WriteLn;
        b := ((i <= j) or (i > j)) & (i # j);
        Text.WriteBool(b);
        Text.WriteLn;
        *)
        
    end;

end.